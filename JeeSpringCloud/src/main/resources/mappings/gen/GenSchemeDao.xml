<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeespring.modules.gen.dao.GenSchemeDao">
    
    <sql id="genSchemeColumns">
		a.*,
		a.gen_table_id AS "genTable.id"
	</sql>
	
	<sql id="genSchemeJoins">
		
    </sql>
    
    <select id="get" resultType="GenScheme">
		SELECT 
			<include refid="genSchemeColumns"/>
		FROM gen_scheme a
		<include refid="genSchemeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="GenScheme">
		SELECT 
			<include refid="genSchemeColumns"/>
		FROM gen_scheme a
		<include refid="genSchemeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} 
		<if test="name != null and name != ''">
			AND a.name LIKE 
				<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
		</if>
		ORDER BY a.update_date DESC
	</select>
	
	<select id="findAllList" resultType="GenScheme">
		SELECT 
			<include refid="genSchemeColumns"/>
		FROM gen_scheme a
		<include refid="genSchemeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} 
		ORDER BY a.update_date DESC
	</select>
	
	<insert id="insert">
		INSERT INTO gen_scheme(
			id, 
			name, 
			category, 
			package_name, 
			module_name, 
			sub_module_name, 
			function_name, 
			function_name_simple, 
			function_author, 
			gen_table_id, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			del_flag
		) VALUES (
			#{id}, 
			#{name}, 
			#{category},  
			#{packageName},  
			#{moduleName},  
			#{subModuleName},  
			#{functionName},  
			#{functionNameSimple},  
			#{functionAuthor},  
			#{genTable.id},  
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE gen_scheme SET 
			name = #{name}, 
			category = #{category},  
			package_name = #{packageName},  
			module_name = #{moduleName},  
			sub_module_name = #{subModuleName},  
			function_name = #{functionName},  
			function_name_simple = #{functionNameSimple},  
			function_author = #{functionAuthor},  
			gen_table_id = #{genTable.id},  
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM gen_scheme
		WHERE id = #{id}
	</update>
	
	<update id="deleteByLogic">
		UPDATE gen_scheme SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="GenScheme" statementType="STATEMENT">
		SELECT 
			<include refid="genSchemeColumns"/>
		FROM gen_scheme a
		<include refid="genSchemeJoins"/>  where ${propertyName} = '${value}'
	</select>
	
	
</mapper>