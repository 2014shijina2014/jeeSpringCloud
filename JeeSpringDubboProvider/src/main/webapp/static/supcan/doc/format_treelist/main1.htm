<HTML>
<meta http-equiv="content-type" content="text/html; charset=gb2312">
<head>
<link rel="stylesheet" href="../temp1.css" type="text/css">
<style>
	table {font-family:微软雅黑,Consolas,Arial,宋体;}
</style>
<script type="text/javascript" src="../proptable.js"></script>
<script>
 function gentable()
 {
  var xmlDoc = getXMLDoc("properties.xml?81");
  genproptable('Tag11', xmlDoc, "#e2e2e2");
  xmlDoc = getXMLDoc("properties.background.xml?81");
  genproptable('Tag110', xmlDoc, "#e2e2e2");
 }
</script>
</head>

<body onLoad="gentable()" bgcolor=#ffffff vlink=#0000ff>
<div id="Tag1"/>
<br>
<Table cols=3 border=0 width=100%>
<col width=5%>
<col width=55%>
<col width=40% valign=top>
<tr height=130 valign=top><td/><td></td><td><img src='../../res/treelistsh.jpg'></td></tr>
</table>
　　Supcan Treelist是根据XML描述文件在页面动态创建的，该XML描述文件的规范简洁易懂，且大多数元素和属性都可以不书写(采用默认值)，程序员也可以在服务器端动态生成XML、甚至可以用 Notepad 直接编辑。<br>
　　下面的说明相当于是本XML的DTD 规则文档，其中“数量”表示该元素的个数(在父元素下)，“1”表示必须有且只能为1个；“0 - 1”表示数量为0或1，“0 - n”表示可以为0或多个。<br>
　　Supcan Treelist自带高效的XML DOM/SAX解析器，该解析器性能比Windows的MSXML更出色，且对元素名和属性名的<font color=red>大小写不敏感</font>.<br>
　　在demo包的 Treelist 子目录下有大量的XML文件实例可供参考.<br>
<br><br>

<div id="Tag11"></div><br>


<div id="Tag110"></div><br>

</body></html>